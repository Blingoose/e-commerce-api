<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Reset Password</title>
    <link
      rel="stylesheet"
      type="text/css"
      href="/../api/v1/css/reset-password.css"
    />
  </head>
  <body>
    <div class="center">
      <form class="form" id="reset-password-form">
        <label for="password">New Password:</label>
        <input class="password" type="password" id="password" required />
        <label for="password">Repeat Password:</label>
        <input class="password" type="password" id="repeat-password" required />
        <button class="submit" type="submit" disabled>Reset Password</button>
      </form>
      <p class="message"></p>
    </div>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.3.4/axios.min.js"
      integrity="sha512-LUKzDoJKOLqnxGWWIBM4lzRBlxcva2ZTztO8bTcWPmDSpkErWx0bSP4pdsjNH8kiHAUPaT06UXcb+vOEZH+HpQ=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
      nonce="<%= nonce %>"
    ></script>
    <script nonce="<%= nonce %>">
      const form = document.querySelector("#reset-password-form");
      const submitButton = document.querySelector(".submit");
      const message = document.querySelector(".message");
      const password = document.querySelector("#password");
      const repeatPassword = document.querySelector("#repeat-password");
      let timeoutId;

      function checkValidity() {
        if (
          password.value.trim().length > 0 &&
          repeatPassword.value.trim().length > 0
        ) {
          submitButton.disabled = false;
        } else {
          submitButton.disabled = true;
        }
      }

      function statusMessage() {
        clearTimeout(timeoutId);
        timeoutId = setTimeout(() => {
          message.innerText = "";
        }, 3000);
      }

      function dynamicURL(path) {
        return `${window.location.protocol}//${window.location.hostname}${
          window.location.port ? ":" + window.location.port : ""
        }/api/v1/auth/${path}`;
      }

      password.addEventListener("input", checkValidity);
      repeatPassword.addEventListener("input", checkValidity);

      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        statusMessage();

        if (password.value !== repeatPassword.value) {
          message.innerText = "Passwords do not match!";
          password.value = "";
          repeatPassword.value = "";
          // statusMessage();
          checkValidity();
          return;
        } else {
          clearTimeout(timeoutId);
          message.innerText = "Loading....";
        }

        if (form.dataset.submitting === "true") {
          // if form is already being submitted, do nothing
          return;
        }

        form.dataset.submitting = "true"; // set submitting flag

        // gat email and token from the url params
        const urlParams = new URLSearchParams(window.location.search);
        const email = urlParams.get("email");
        const token = urlParams.get("token");
        const data = { email, password: password.value, token };
        const resetPasswordPath = "reset-password";
        const resetSuccessPath = "success-page";

        const resetPasswordURL = dynamicURL(resetPasswordPath);

        try {
          const response = await axios.post(resetPasswordPath, data, {
            headers: {
              "Content-Type": "application/json",
            },
          });

          const result = response.data;
          message.innerText = Object.values(result);
          password.value = "";
          repeatPassword.value = "";
          checkValidity();

          if (response.status === 200) {
            setTimeout(() => {
              window.location.href = dynamicURL(resetSuccessPath);
            }, 2000);
          }
        } catch (error) {
          message.innerText = error.response.data.errMsg;
        } finally {
          form.dataset.submitting = "false"; // unset submitting flag
          statusMessage();
        }
      });
    </script>
  </body>
</html>
